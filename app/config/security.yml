# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_EMPLOYEE, ROLE_MANAGER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # secures part of the application
        main:
            pattern:    ^/
            # it's important to notice that in this case _demo_security_check and _demo_login
            # are route names and that they are specified in the AcmeDemoBundle
            form_login:
                check_path: /login_check
                login_path: /login
                provider: fos_userbundle
            logout:
                path:   /logout
                target: /
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/book/security.html#security-book-access-control-matching-options
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/test, roles: ROLE_ADMIN }
        # Admin
        - { path: ^/admin/*, roles: ROLE_ADMIN }
        # Manager
        - { path: ^/manager/dashboard, roles: ROLE_MANAGER }
        - { path: ^/manager/shifts, roles: ROLE_MANAGER }
        - { path: ^/manager/locations, roles: ROLE_MANAGER }
        - { path: ^/manager/positions, roles: ROLE_MANAGER }
        - { path: ^/manager/employees, roles: ROLE_MANAGER }
        - { path: ^/manager/autoschedule, roles: ROLE_MANAGER }
        - { path: ^/manager/schedule, roles: ROLE_MANAGER }
        # Employee
        - { path: ^/employee/dashboard, roles: ROLE_EMPLOYEE }
        - { path: ^/employee/profile, roles: ROLE_EMPLOYEE }
        - { path: ^/employee/giveup, roles: ROLE_EMPLOYEE }
        - { path: ^/employee/pickup, roles: ROLE_EMPLOYEE }
        - { path: ^/employee/availability, roles: ROLE_EMPLOYEE }